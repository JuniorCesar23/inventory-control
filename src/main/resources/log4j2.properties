###############################################################################
# Propriedades/variaveis
#
# Abaixo estao difinidas propriedades que serao usadas nesse arquivo de log.
###############################################################################

#Nome do JOB
property.jobName = inventory-control

# Pasta base onde os logs serao escritos
property.logDir = var/log/${jobName}

###############################################################################
# Nivel de impressao das *CONFIGURACOES* de log
#
# Como o log deve se comportar ao imprimir o processo de inicializao do
# proprio log. *NO* o nivel do log (esse definido no rootLogger.level).
#
# Usar o seguinte:
#   trace
#        Para listar tudo da configuracao de log.
#   error
#       Para listar apenas erros de configuracao.
###############################################################################
status=error

###############################################################################
# Appenders
#
# Quais sao as saidas possiveis de log (console, arquivo, etc).
###############################################################################

appenders = console, everything, errorOnly

# Console appender (aparece no console do IntelliJ e no catalina.log)
appender.console.type=Console
appender.console.name=LogToConsole
appender.console.layout.type=PatternLayout
appender.console.layout.pattern=[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n

# Log geral (todos os eventos, de trace a error, em um rotate log file)
appender.everything.type=RollingRandomAccessFile
appender.everything.name=LogToRollingRandomAccessFile
appender.everything.fileName=${logDir}/${jobName}.log
appender.everything.filePattern=${logDir}/${jobName}/${date:yyyy-MM}/${jobName}-%d{dd-MM-yyyy}-%i.log.gz
appender.everything.layout.type=PatternLayout
appender.everything.layout.pattern=%d %p %C{1.} [%t] %m%n
appender.everything.policies.type=Policies
appender.everything.policies.time.type=TimeBasedTriggeringPolicy
appender.everything.policies.size.type=SizeBasedTriggeringPolicy
appender.everything.policies.size.size=250MB
appender.everything.strategy.type=DefaultRolloverStrategy
appender.everything.strategy.max=20

# Log de erro (apenas error em um rotate log file)
appender.errorOnly.type=RollingRandomAccessFile
appender.errorOnly.name=LogErrorToRollingRandomAccessFile
appender.errorOnly.fileName=${logDir}/${jobName}-error.log
appender.errorOnly.filePattern=${logDir}/${jobName}-error/${date:yyyy-MM}/${jobName}-error-%d{dd-MM-yyyy}-%i.log.gz
appender.errorOnly.layout.type=PatternLayout
appender.errorOnly.layout.pattern=%d %p %C{1.} [%t] %m%n
appender.errorOnly.policies.type=Policies
appender.errorOnly.policies.time.type=TimeBasedTriggeringPolicy
appender.errorOnly.policies.size.type=SizeBasedTriggeringPolicy
appender.errorOnly.policies.size.size=250MB
appender.errorOnly.strategy.type=DefaultRolloverStrategy
appender.errorOnly.strategy.max=20
appender.errorOnly.filter.threshold.type = LevelRangeFilter
appender.errorOnly.filter.threshold.minLevel = error
appender.errorOnly.filter.threshold.maxLevel = error

###############################################################################
# Root logger
#
# Configuracoes do log para ser utilizado na aplicacao, ex.:
# Quais tipos de logs serao gerados, quais appenders serao utilizados, etc.
###############################################################################

# Nivel do log para ser utilizado na aplicacao
rootLogger.level=INFO

# Appenders que sero utilizados (descomentar `rootLogger.appenderRef.console.ref=LogToConsole` para mostrar logs no console)
rootLogger.appenderRef.console.ref=LogToConsole
rootLogger.appenderRef.everything.ref=LogToRollingRandomAccessFile
rootLogger.appenderRef.errorOnly.ref=LogErrorToRollingRandomAccessFile
